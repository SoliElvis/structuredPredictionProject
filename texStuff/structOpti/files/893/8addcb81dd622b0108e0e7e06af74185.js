document.write('<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-a9a1cf2ca01efd362bfa52312712ae94.css">')
document.write('<div id=\"gist75842340\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-lagrangeprop-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-lagrangeprop-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> -*- coding: utf-8 -*-<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">Backprop as the method of Lagrange multiplers (and even the implicit function<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC4\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">theorem).<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> <span class=\"pl-c1\">__future__<\/span> <span class=\"pl-k\">import<\/span> division<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC7\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import<\/span> numpy <span class=\"pl-k\">as<\/span> np<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC8\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> arsenal.alphabet <span class=\"pl-k\">import<\/span> Alphabet<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> arsenal.math.checkgrad <span class=\"pl-k\">import<\/span> finite_difference<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC10\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC11\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC12\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Implementation choice: I decided to separate the input-copy and intermediate<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> constraints to avoid annoyances with having two namespaces (x and z). I<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC14\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> suppose writing all constraints as functions of x and z seems more general,<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC15\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> but with input-copy consraints we don&#39;t any expressivity we just have handle<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC16\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> them with special cases (easy enough).<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC17\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC18\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class<\/span> <span class=\"pl-en\">Computation<\/span>:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC19\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC20\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-c1\">__init__<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">f<\/span>, <span class=\"pl-smi\">inputs<\/span>, <span class=\"pl-smi\">constraints<\/span>, <span class=\"pl-smi\">df<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC21\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.d <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">len<\/span>(inputs)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC22\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.n <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.d <span class=\"pl-k\">+<\/span> <span class=\"pl-c1\">len<\/span>(constraints)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC23\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.constraints <span class=\"pl-k\">=<\/span> constraints<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC24\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.inputs <span class=\"pl-k\">=<\/span> inputs<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC25\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.f <span class=\"pl-k\">=<\/span> f<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC26\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.df <span class=\"pl-k\">=<\/span> df<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC27\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC28\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">forward<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">x<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC29\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Evaluate `f(x)`<span class=\"pl-pds\">&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC30\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">self<\/span>.f(<span class=\"pl-c1\">self<\/span>.solve_constraints(x))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC31\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC32\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">solve_constraints<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">x<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC33\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Find a feasible solution to the constraints given `x`.<span class=\"pl-pds\">&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC34\" class=\"blob-code blob-code-inner js-file-line\">        z <span class=\"pl-k\">=<\/span> np.zeros(<span class=\"pl-c1\">self<\/span>.n)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC35\" class=\"blob-code blob-code-inner js-file-line\">        z[<span class=\"pl-c1\">self<\/span>.inputs] <span class=\"pl-k\">=<\/span> x<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC36\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for<\/span> c <span class=\"pl-k\">in<\/span> <span class=\"pl-c1\">self<\/span>.constraints:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC37\" class=\"blob-code blob-code-inner js-file-line\">            c.solve(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC38\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> z<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC39\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC40\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">lagrangian<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">x<\/span>, <span class=\"pl-smi\">z<\/span>, <span class=\"pl-smi\">l<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC41\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> (<span class=\"pl-c1\">self<\/span>.f(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC42\" class=\"blob-code blob-code-inner js-file-line\">                <span class=\"pl-k\">+<\/span> l[:<span class=\"pl-c1\">self<\/span>.d].dot(x[:<span class=\"pl-c1\">self<\/span>.d] <span class=\"pl-k\">-<\/span> z[:<span class=\"pl-c1\">self<\/span>.d])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC43\" class=\"blob-code blob-code-inner js-file-line\">                <span class=\"pl-k\">+<\/span> l[<span class=\"pl-c1\">self<\/span>.d:].dot(<span class=\"pl-c1\">self<\/span>.constraints.penalties(z)))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC44\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC45\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">dlagrangian<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">x<\/span>, <span class=\"pl-smi\">z<\/span>, <span class=\"pl-smi\">l<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC46\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Compute gradients of the Lagrangian wrt each argument.<span class=\"pl-pds\">&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC47\" class=\"blob-code blob-code-inner js-file-line\">        dx <span class=\"pl-k\">=<\/span> np.zeros_like(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC48\" class=\"blob-code blob-code-inner js-file-line\">        dx <span class=\"pl-k\">+=<\/span> l[:<span class=\"pl-c1\">self<\/span>.d]<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC49\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC50\" class=\"blob-code blob-code-inner js-file-line\">        dz <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.df(z) <span class=\"pl-k\">+<\/span> <span class=\"pl-c1\">self<\/span>.dconstraints(z).dot(l)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC51\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC52\" class=\"blob-code blob-code-inner js-file-line\">        dl <span class=\"pl-k\">=<\/span> np.zeros_like(l)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC53\" class=\"blob-code blob-code-inner js-file-line\">        dl[:<span class=\"pl-c1\">self<\/span>.d] <span class=\"pl-k\">+=<\/span> x[<span class=\"pl-c1\">self<\/span>.inputs] <span class=\"pl-k\">-<\/span> z[<span class=\"pl-c1\">self<\/span>.inputs]<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L54\" class=\"blob-num js-line-number\" data-line-number=\"54\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC54\" class=\"blob-code blob-code-inner js-file-line\">        dl[<span class=\"pl-c1\">self<\/span>.d:] <span class=\"pl-k\">+=<\/span> <span class=\"pl-c1\">self<\/span>.constraints.penalties(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L55\" class=\"blob-num js-line-number\" data-line-number=\"55\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC55\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L56\" class=\"blob-num js-line-number\" data-line-number=\"56\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC56\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> dx, dz, dl<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L57\" class=\"blob-num js-line-number\" data-line-number=\"57\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC57\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L58\" class=\"blob-num js-line-number\" data-line-number=\"58\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC58\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">dconstraints<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">z<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L59\" class=\"blob-num js-line-number\" data-line-number=\"59\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC59\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Evaluate constraint matrix for `z`.<span class=\"pl-pds\">&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L60\" class=\"blob-num js-line-number\" data-line-number=\"60\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC60\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Note: The linear system approach build a massive highly structure<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L61\" class=\"blob-num js-line-number\" data-line-number=\"61\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC61\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> sparse matrix that represents the local gradients. This is really<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L62\" class=\"blob-num js-line-number\" data-line-number=\"62\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC62\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> inefficient in most cases because we can aggregate gradients as we<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L63\" class=\"blob-num js-line-number\" data-line-number=\"63\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC63\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> go. This avoids the need to materialize this monster matrix.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L64\" class=\"blob-num js-line-number\" data-line-number=\"64\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC64\" class=\"blob-code blob-code-inner js-file-line\">        D <span class=\"pl-k\">=<\/span> np.zeros((<span class=\"pl-c1\">self<\/span>.n, <span class=\"pl-c1\">self<\/span>.n))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L65\" class=\"blob-num js-line-number\" data-line-number=\"65\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC65\" class=\"blob-code blob-code-inner js-file-line\">        D[<span class=\"pl-c1\">self<\/span>.inputs, <span class=\"pl-c1\">self<\/span>.inputs] <span class=\"pl-k\">=<\/span> <span class=\"pl-k\">-<\/span><span class=\"pl-c1\">1<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L66\" class=\"blob-num js-line-number\" data-line-number=\"66\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC66\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for<\/span> c <span class=\"pl-k\">in<\/span> <span class=\"pl-c1\">self<\/span>.constraints:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L67\" class=\"blob-num js-line-number\" data-line-number=\"67\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC67\" class=\"blob-code blob-code-inner js-file-line\">            c.grad(z, D[:, c.i])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L68\" class=\"blob-num js-line-number\" data-line-number=\"68\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC68\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> D<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L69\" class=\"blob-num js-line-number\" data-line-number=\"69\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC69\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L70\" class=\"blob-num js-line-number\" data-line-number=\"70\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC70\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">reverse_mode<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">D<\/span>, <span class=\"pl-smi\">v<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L71\" class=\"blob-num js-line-number\" data-line-number=\"71\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC71\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Solve upper triangular linear system, `D x = -v`.<span class=\"pl-pds\">&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L72\" class=\"blob-num js-line-number\" data-line-number=\"72\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC72\" class=\"blob-code blob-code-inner js-file-line\">        l <span class=\"pl-k\">=<\/span> v.copy()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L73\" class=\"blob-num js-line-number\" data-line-number=\"73\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC73\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for<\/span> c <span class=\"pl-k\">in<\/span> <span class=\"pl-c1\">reversed<\/span>(<span class=\"pl-c1\">self<\/span>.constraints):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L74\" class=\"blob-num js-line-number\" data-line-number=\"74\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC74\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">for<\/span> a <span class=\"pl-k\">in<\/span> c.args:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L75\" class=\"blob-num js-line-number\" data-line-number=\"75\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC75\" class=\"blob-code blob-code-inner js-file-line\">                l[a] <span class=\"pl-k\">+=<\/span> l[c.i] <span class=\"pl-k\">*<\/span> D[a, c.i]<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L76\" class=\"blob-num js-line-number\" data-line-number=\"76\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC76\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> l<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L77\" class=\"blob-num js-line-number\" data-line-number=\"77\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC77\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L78\" class=\"blob-num js-line-number\" data-line-number=\"78\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC78\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">forward_mode<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">D<\/span>, <span class=\"pl-smi\">v<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L79\" class=\"blob-num js-line-number\" data-line-number=\"79\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC79\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&quot;<\/span>Solve upper triangular linear system, `Dᵀ = -v`.<span class=\"pl-pds\">&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L80\" class=\"blob-num js-line-number\" data-line-number=\"80\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC80\" class=\"blob-code blob-code-inner js-file-line\">        l <span class=\"pl-k\">=<\/span> v.copy()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L81\" class=\"blob-num js-line-number\" data-line-number=\"81\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC81\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for<\/span> c <span class=\"pl-k\">in<\/span> <span class=\"pl-c1\">self<\/span>.constraints:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L82\" class=\"blob-num js-line-number\" data-line-number=\"82\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC82\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">for<\/span> a <span class=\"pl-k\">in<\/span> c.args:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L83\" class=\"blob-num js-line-number\" data-line-number=\"83\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC83\" class=\"blob-code blob-code-inner js-file-line\">                l[c.i] <span class=\"pl-k\">+=<\/span> l[a] <span class=\"pl-k\">*<\/span> D[a, c.i]<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L84\" class=\"blob-num js-line-number\" data-line-number=\"84\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC84\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> l<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L85\" class=\"blob-num js-line-number\" data-line-number=\"85\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC85\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L86\" class=\"blob-num js-line-number\" data-line-number=\"86\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC86\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L87\" class=\"blob-num js-line-number\" data-line-number=\"87\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC87\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class<\/span> <span class=\"pl-en\">Constraint<\/span>:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L88\" class=\"blob-num js-line-number\" data-line-number=\"88\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC88\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-c1\">__init__<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">i<\/span>, <span class=\"pl-smi\">f<\/span>, <span class=\"pl-smi\">args<\/span>, <span class=\"pl-smi\">df<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-c1\">None<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L89\" class=\"blob-num js-line-number\" data-line-number=\"89\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC89\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.args <span class=\"pl-k\">=<\/span> args<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L90\" class=\"blob-num js-line-number\" data-line-number=\"90\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC90\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.i <span class=\"pl-k\">=<\/span> i<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L91\" class=\"blob-num js-line-number\" data-line-number=\"91\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC91\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.f <span class=\"pl-k\">=<\/span> f<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L92\" class=\"blob-num js-line-number\" data-line-number=\"92\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC92\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.df <span class=\"pl-k\">=<\/span> df<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L93\" class=\"blob-num js-line-number\" data-line-number=\"93\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC93\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">if<\/span> df <span class=\"pl-k\">is<\/span> <span class=\"pl-c1\">None<\/span>:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L94\" class=\"blob-num js-line-number\" data-line-number=\"94\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC94\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Use finite-difference approximation if user didn&#39;t pass in df.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L95\" class=\"blob-num js-line-number\" data-line-number=\"95\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC95\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-c1\">self<\/span>.df <span class=\"pl-k\">=<\/span> <span class=\"pl-k\">lambda<\/span> <span class=\"pl-smi\">x<\/span>: finite_difference(f)(x).flatten()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L96\" class=\"blob-num js-line-number\" data-line-number=\"96\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC96\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L97\" class=\"blob-num js-line-number\" data-line-number=\"97\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC97\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">solve<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">z<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L98\" class=\"blob-num js-line-number\" data-line-number=\"98\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC98\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Closed form solution to the constraint, could take a gradient step or<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L99\" class=\"blob-num js-line-number\" data-line-number=\"99\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC99\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> solve a block-coordinate subproblem, more generally.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L100\" class=\"blob-num js-line-number\" data-line-number=\"100\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC100\" class=\"blob-code blob-code-inner js-file-line\">        z[<span class=\"pl-c1\">self<\/span>.i] <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.f(z[<span class=\"pl-c1\">self<\/span>.args])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L101\" class=\"blob-num js-line-number\" data-line-number=\"101\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC101\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L102\" class=\"blob-num js-line-number\" data-line-number=\"102\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC102\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">penalty<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">z<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L103\" class=\"blob-num js-line-number\" data-line-number=\"103\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC103\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> <span class=\"pl-c1\">float<\/span>(<span class=\"pl-c1\">self<\/span>.f(z[<span class=\"pl-c1\">self<\/span>.args]) <span class=\"pl-k\">-<\/span> z[<span class=\"pl-c1\">self<\/span>.i])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L104\" class=\"blob-num js-line-number\" data-line-number=\"104\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC104\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L105\" class=\"blob-num js-line-number\" data-line-number=\"105\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC105\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">grad<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">z<\/span>, <span class=\"pl-smi\">dz<\/span>, <span class=\"pl-smi\">adj<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-c1\">1<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L106\" class=\"blob-num js-line-number\" data-line-number=\"106\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC106\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Note: adjoint is scalar because constraint is scalar.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L107\" class=\"blob-num js-line-number\" data-line-number=\"107\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC107\" class=\"blob-code blob-code-inner js-file-line\">        dz[<span class=\"pl-c1\">self<\/span>.args] <span class=\"pl-k\">+=<\/span> adj <span class=\"pl-k\">*<\/span> <span class=\"pl-c1\">self<\/span>.df(z[<span class=\"pl-c1\">self<\/span>.args])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L108\" class=\"blob-num js-line-number\" data-line-number=\"108\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC108\" class=\"blob-code blob-code-inner js-file-line\">        dz[<span class=\"pl-c1\">self<\/span>.i] <span class=\"pl-k\">+=<\/span> <span class=\"pl-k\">-<\/span>adj<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L109\" class=\"blob-num js-line-number\" data-line-number=\"109\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC109\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L110\" class=\"blob-num js-line-number\" data-line-number=\"110\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC110\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L111\" class=\"blob-num js-line-number\" data-line-number=\"111\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC111\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class<\/span> <span class=\"pl-en\">Constraints<\/span>(<span class=\"pl-c1\">list<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L112\" class=\"blob-num js-line-number\" data-line-number=\"112\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC112\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-s\"><span class=\"pl-pds\">&quot;&quot;&quot;<\/span>Handles string-valued names and certain conventions like inputs need to be<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L113\" class=\"blob-num js-line-number\" data-line-number=\"113\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC113\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    the first vars.<span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L114\" class=\"blob-num js-line-number\" data-line-number=\"114\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC114\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L115\" class=\"blob-num js-line-number\" data-line-number=\"115\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC115\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-c1\">__init__<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">inputs<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L116\" class=\"blob-num js-line-number\" data-line-number=\"116\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC116\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.A <span class=\"pl-k\">=<\/span> Alphabet()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L117\" class=\"blob-num js-line-number\" data-line-number=\"117\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC117\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.inputs <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">self<\/span>.A.map(inputs)  <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> need inputs to be the first vars<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L118\" class=\"blob-num js-line-number\" data-line-number=\"118\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC118\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">super<\/span>(Constraints, <span class=\"pl-c1\">self<\/span>).<span class=\"pl-c1\">__init__<\/span>()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L119\" class=\"blob-num js-line-number\" data-line-number=\"119\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC119\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L120\" class=\"blob-num js-line-number\" data-line-number=\"120\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC120\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">add_constraint<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">lhs<\/span>, <span class=\"pl-smi\">f<\/span>, <span class=\"pl-smi\">rhs<\/span>, <span class=\"pl-smi\">df<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-c1\">None<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L121\" class=\"blob-num js-line-number\" data-line-number=\"121\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC121\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">self<\/span>.append(Constraint(<span class=\"pl-c1\">self<\/span>.A[lhs], f, <span class=\"pl-c1\">self<\/span>.A.map(rhs), df))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L122\" class=\"blob-num js-line-number\" data-line-number=\"122\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC122\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L123\" class=\"blob-num js-line-number\" data-line-number=\"123\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC123\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">def<\/span> <span class=\"pl-en\">penalties<\/span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self<\/span><\/span>, <span class=\"pl-smi\">z<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-lagrangeprop-py-L124\" class=\"blob-num js-line-number\" data-line-number=\"124\"><\/td>\n        <td id=\"file-lagrangeprop-py-LC124\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">return<\/span> np.array([c.penalty(z) <span class=\"pl-k\">for<\/span> c <span class=\"pl-k\">in<\/span> <span class=\"pl-c1\">self<\/span>])<\/td>\n      <\/tr>\n<\/table>\n\n\n  <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/timvieira/8addcb81dd622b0108e0e7e06af74185/raw/719622c71d2a7cd539fafd41f29de5ecb76d391e/lagrangeprop.py\" style=\"float:right\">view raw<\/a>\n        <a href=\"https://gist.github.com/timvieira/8addcb81dd622b0108e0e7e06af74185#file-lagrangeprop-py\">lagrangeprop.py<\/a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-tests-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-tests-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"><\/td>\n        <td id=\"file-tests-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span> -*- coding: utf-8 -*-<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"><\/td>\n        <td id=\"file-tests-py-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"><\/td>\n        <td id=\"file-tests-py-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">Backprop as the method of Lagrange multiplers (and even the implicit function<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"><\/td>\n        <td id=\"file-tests-py-LC4\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">theorem).<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"><\/td>\n        <td id=\"file-tests-py-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"><\/td>\n        <td id=\"file-tests-py-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> <span class=\"pl-c1\">__future__<\/span> <span class=\"pl-k\">import<\/span> division<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"><\/td>\n        <td id=\"file-tests-py-LC7\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import<\/span> numpy <span class=\"pl-k\">as<\/span> np<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"><\/td>\n        <td id=\"file-tests-py-LC8\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import<\/span> scipy.linalg<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"><\/td>\n        <td id=\"file-tests-py-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> lagrangeprop <span class=\"pl-k\">import<\/span> Computation, Constraints<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"><\/td>\n        <td id=\"file-tests-py-LC10\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> arsenal.math.checkgrad <span class=\"pl-k\">import<\/span> finite_difference, fdcheck<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"><\/td>\n        <td id=\"file-tests-py-LC11\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> arsenal.math <span class=\"pl-k\">import<\/span> onehot, compare<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"><\/td>\n        <td id=\"file-tests-py-LC12\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from<\/span> arsenal <span class=\"pl-k\">import<\/span> colors<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"><\/td>\n        <td id=\"file-tests-py-LC13\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"><\/td>\n        <td id=\"file-tests-py-LC14\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"><\/td>\n        <td id=\"file-tests-py-LC15\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">test_implicit_diff_view<\/span>(<span class=\"pl-smi\">L<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"><\/td>\n        <td id=\"file-tests-py-LC16\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-s\"><span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"><\/td>\n        <td id=\"file-tests-py-LC17\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    Test connections between Lagrangian and implicit differentiation<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"><\/td>\n        <td id=\"file-tests-py-LC18\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"><\/td>\n        <td id=\"file-tests-py-LC19\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    If you have the Lagrangian view of backprop, then implicit functions should<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"><\/td>\n        <td id=\"file-tests-py-LC20\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    really pop out!<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"><\/td>\n        <td id=\"file-tests-py-LC21\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"><\/td>\n        <td id=\"file-tests-py-LC22\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    Think of forward propagation as a smooth blackbox function h that maps inputs<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"><\/td>\n        <td id=\"file-tests-py-LC23\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    (x) to intermediates (z).<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"><\/td>\n        <td id=\"file-tests-py-LC24\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"><\/td>\n        <td id=\"file-tests-py-LC25\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      maximize f(z)<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"><\/td>\n        <td id=\"file-tests-py-LC26\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      subjecto h(x) = z<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"><\/td>\n        <td id=\"file-tests-py-LC27\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"><\/td>\n        <td id=\"file-tests-py-LC28\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    Rewriting slightly, let g(x,z) = h(x) - z.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"><\/td>\n        <td id=\"file-tests-py-LC29\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"><\/td>\n        <td id=\"file-tests-py-LC30\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      maximize f(z)<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"><\/td>\n        <td id=\"file-tests-py-LC31\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      subjecto g(x,z) = 0<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"><\/td>\n        <td id=\"file-tests-py-LC32\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"><\/td>\n        <td id=\"file-tests-py-LC33\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    With forward propagation we always satisfy the constraints, so g(x,z)=0. Thus,<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"><\/td>\n        <td id=\"file-tests-py-LC34\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    we also have &quot;equilibrium&quot; under little perturbations<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"><\/td>\n        <td id=\"file-tests-py-LC35\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"><\/td>\n        <td id=\"file-tests-py-LC36\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      g(x+Δx, z+Δz) = g(x,z) + Δx ⋅ ∂g/∂x + Δz ⋅ ∂g/∂z = 0.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"><\/td>\n        <td id=\"file-tests-py-LC37\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"><\/td>\n        <td id=\"file-tests-py-LC38\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    Since g(x,z) = 0,<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"><\/td>\n        <td id=\"file-tests-py-LC39\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      Δx ⋅ ∂g/∂x + Δz ⋅ ∂g/∂z = 0<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"><\/td>\n        <td id=\"file-tests-py-LC40\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"><\/td>\n        <td id=\"file-tests-py-LC41\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    Solve for Δz/Δx,<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"><\/td>\n        <td id=\"file-tests-py-LC42\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">       Δz/Δx = - (∂g/∂z)^-1 ∂g/∂x  ← there&#39;s your linear system of equations!<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"><\/td>\n        <td id=\"file-tests-py-LC43\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"><\/td>\n        <td id=\"file-tests-py-LC44\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    Combine with the objective ∂f/∂z<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"><\/td>\n        <td id=\"file-tests-py-LC45\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">      ∂f/∂z Δz/Δx = ∂f/∂x<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"><\/td>\n        <td id=\"file-tests-py-LC46\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\"><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"><\/td>\n        <td id=\"file-tests-py-LC47\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-s\">    <span class=\"pl-pds\">&quot;&quot;&quot;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"><\/td>\n        <td id=\"file-tests-py-LC48\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"><\/td>\n        <td id=\"file-tests-py-LC49\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.magenta <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>Implicit differentiation:<span class=\"pl-pds\">&#39;<\/span><\/span>,<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"><\/td>\n        <td id=\"file-tests-py-LC50\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"><\/td>\n        <td id=\"file-tests-py-LC51\" class=\"blob-code blob-code-inner js-file-line\">    x <span class=\"pl-k\">=<\/span> np.random.randn(L.d)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"><\/td>\n        <td id=\"file-tests-py-LC52\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"><\/td>\n        <td id=\"file-tests-py-LC53\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Important! connection only holds when constraints are satisfied!<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L54\" class=\"blob-num js-line-number\" data-line-number=\"54\"><\/td>\n        <td id=\"file-tests-py-LC54\" class=\"blob-code blob-code-inner js-file-line\">    z <span class=\"pl-k\">=<\/span> L.solve_constraints(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L55\" class=\"blob-num js-line-number\" data-line-number=\"55\"><\/td>\n        <td id=\"file-tests-py-LC55\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L56\" class=\"blob-num js-line-number\" data-line-number=\"56\"><\/td>\n        <td id=\"file-tests-py-LC56\" class=\"blob-code blob-code-inner js-file-line\">    f_dz_dx <span class=\"pl-k\">=<\/span> finite_difference(L.solve_constraints)(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L57\" class=\"blob-num js-line-number\" data-line-number=\"57\"><\/td>\n        <td id=\"file-tests-py-LC57\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L58\" class=\"blob-num js-line-number\" data-line-number=\"58\"><\/td>\n        <td id=\"file-tests-py-LC58\" class=\"blob-code blob-code-inner js-file-line\">    dC_dx <span class=\"pl-k\">=<\/span> np.zeros((L.n, L.d))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L59\" class=\"blob-num js-line-number\" data-line-number=\"59\"><\/td>\n        <td id=\"file-tests-py-LC59\" class=\"blob-code blob-code-inner js-file-line\">    dC_dx[L.inputs,L.inputs] <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">1<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L60\" class=\"blob-num js-line-number\" data-line-number=\"60\"><\/td>\n        <td id=\"file-tests-py-LC60\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L61\" class=\"blob-num js-line-number\" data-line-number=\"61\"><\/td>\n        <td id=\"file-tests-py-LC61\" class=\"blob-code blob-code-inner js-file-line\">    dC_dz <span class=\"pl-k\">=<\/span> L.dconstraints(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L62\" class=\"blob-num js-line-number\" data-line-number=\"62\"><\/td>\n        <td id=\"file-tests-py-LC62\" class=\"blob-code blob-code-inner js-file-line\">    dz_dx <span class=\"pl-k\">=<\/span> <span class=\"pl-k\">-<\/span>scipy.linalg.solve(dC_dz.T, dC_dx).T<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L63\" class=\"blob-num js-line-number\" data-line-number=\"63\"><\/td>\n        <td id=\"file-tests-py-LC63\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L64\" class=\"blob-num js-line-number\" data-line-number=\"64\"><\/td>\n        <td id=\"file-tests-py-LC64\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(f_dz_dx, dz_dx)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L65\" class=\"blob-num js-line-number\" data-line-number=\"65\"><\/td>\n        <td id=\"file-tests-py-LC65\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L66\" class=\"blob-num js-line-number\" data-line-number=\"66\"><\/td>\n        <td id=\"file-tests-py-LC66\" class=\"blob-code blob-code-inner js-file-line\">    df_dz <span class=\"pl-k\">=<\/span> L.df(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L67\" class=\"blob-num js-line-number\" data-line-number=\"67\"><\/td>\n        <td id=\"file-tests-py-LC67\" class=\"blob-code blob-code-inner js-file-line\">    f_df_dx <span class=\"pl-k\">=<\/span> finite_difference(L.forward)(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L68\" class=\"blob-num js-line-number\" data-line-number=\"68\"><\/td>\n        <td id=\"file-tests-py-LC68\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L69\" class=\"blob-num js-line-number\" data-line-number=\"69\"><\/td>\n        <td id=\"file-tests-py-LC69\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(f_df_dx, dz_dx.dot(df_dz))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L70\" class=\"blob-num js-line-number\" data-line-number=\"70\"><\/td>\n        <td id=\"file-tests-py-LC70\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L71\" class=\"blob-num js-line-number\" data-line-number=\"71\"><\/td>\n        <td id=\"file-tests-py-LC71\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.green <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>ok<span class=\"pl-pds\">&#39;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L72\" class=\"blob-num js-line-number\" data-line-number=\"72\"><\/td>\n        <td id=\"file-tests-py-LC72\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L73\" class=\"blob-num js-line-number\" data-line-number=\"73\"><\/td>\n        <td id=\"file-tests-py-LC73\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L74\" class=\"blob-num js-line-number\" data-line-number=\"74\"><\/td>\n        <td id=\"file-tests-py-LC74\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">test_forward_mode<\/span>(<span class=\"pl-smi\">L<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L75\" class=\"blob-num js-line-number\" data-line-number=\"75\"><\/td>\n        <td id=\"file-tests-py-LC75\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.magenta <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>Forward-mode:<span class=\"pl-pds\">&#39;<\/span><\/span>,<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L76\" class=\"blob-num js-line-number\" data-line-number=\"76\"><\/td>\n        <td id=\"file-tests-py-LC76\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L77\" class=\"blob-num js-line-number\" data-line-number=\"77\"><\/td>\n        <td id=\"file-tests-py-LC77\" class=\"blob-code blob-code-inner js-file-line\">    x <span class=\"pl-k\">=<\/span> np.random.randn(L.d)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L78\" class=\"blob-num js-line-number\" data-line-number=\"78\"><\/td>\n        <td id=\"file-tests-py-LC78\" class=\"blob-code blob-code-inner js-file-line\">    z <span class=\"pl-k\">=<\/span> L.solve_constraints(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L79\" class=\"blob-num js-line-number\" data-line-number=\"79\"><\/td>\n        <td id=\"file-tests-py-LC79\" class=\"blob-code blob-code-inner js-file-line\">    D <span class=\"pl-k\">=<\/span> L.dconstraints(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L80\" class=\"blob-num js-line-number\" data-line-number=\"80\"><\/td>\n        <td id=\"file-tests-py-LC80\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L81\" class=\"blob-num js-line-number\" data-line-number=\"81\"><\/td>\n        <td id=\"file-tests-py-LC81\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Compare methods to finite-difference approximation to ∇f(x)<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L82\" class=\"blob-num js-line-number\" data-line-number=\"82\"><\/td>\n        <td id=\"file-tests-py-LC82\" class=\"blob-code blob-code-inner js-file-line\">    f_df_dx <span class=\"pl-k\">=<\/span> finite_difference(L.forward)(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L83\" class=\"blob-num js-line-number\" data-line-number=\"83\"><\/td>\n        <td id=\"file-tests-py-LC83\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L84\" class=\"blob-num js-line-number\" data-line-number=\"84\"><\/td>\n        <td id=\"file-tests-py-LC84\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> In forward mode, λ is interpreted as a vector of &quot;tangents&quot; pertaining to<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L85\" class=\"blob-num js-line-number\" data-line-number=\"85\"><\/td>\n        <td id=\"file-tests-py-LC85\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> a single input, instead of &quot;adjoints&quot; of the single output. Tangents are<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L86\" class=\"blob-num js-line-number\" data-line-number=\"86\"><\/td>\n        <td id=\"file-tests-py-LC86\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> equal to rows(cols?) of the Jacobian of the constraints.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L87\" class=\"blob-num js-line-number\" data-line-number=\"87\"><\/td>\n        <td id=\"file-tests-py-LC87\" class=\"blob-code blob-code-inner js-file-line\">    f_dz_dx <span class=\"pl-k\">=<\/span> finite_difference(L.solve_constraints)(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L88\" class=\"blob-num js-line-number\" data-line-number=\"88\"><\/td>\n        <td id=\"file-tests-py-LC88\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L89\" class=\"blob-num js-line-number\" data-line-number=\"89\"><\/td>\n        <td id=\"file-tests-py-LC89\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for<\/span> i <span class=\"pl-k\">in<\/span> <span class=\"pl-c1\">range<\/span>(L.d):   <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> loop over each input<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L90\" class=\"blob-num js-line-number\" data-line-number=\"90\"><\/td>\n        <td id=\"file-tests-py-LC90\" class=\"blob-code blob-code-inner js-file-line\">        l <span class=\"pl-k\">=<\/span> L.forward_mode(D, onehot(i, L.n))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L91\" class=\"blob-num js-line-number\" data-line-number=\"91\"><\/td>\n        <td id=\"file-tests-py-LC91\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">assert<\/span> np.allclose(f_dz_dx[i], l)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L92\" class=\"blob-num js-line-number\" data-line-number=\"92\"><\/td>\n        <td id=\"file-tests-py-LC92\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L93\" class=\"blob-num js-line-number\" data-line-number=\"93\"><\/td>\n        <td id=\"file-tests-py-LC93\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> df/dz * dz/dx[i] =&gt; df/dx[i]<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L94\" class=\"blob-num js-line-number\" data-line-number=\"94\"><\/td>\n        <td id=\"file-tests-py-LC94\" class=\"blob-code blob-code-inner js-file-line\">        gi <span class=\"pl-k\">=<\/span> L.df(z).dot(l)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L95\" class=\"blob-num js-line-number\" data-line-number=\"95\"><\/td>\n        <td id=\"file-tests-py-LC95\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">assert<\/span> np.allclose(f_df_dx[i], gi)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L96\" class=\"blob-num js-line-number\" data-line-number=\"96\"><\/td>\n        <td id=\"file-tests-py-LC96\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L97\" class=\"blob-num js-line-number\" data-line-number=\"97\"><\/td>\n        <td id=\"file-tests-py-LC97\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.green <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>ok<span class=\"pl-pds\">&#39;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L98\" class=\"blob-num js-line-number\" data-line-number=\"98\"><\/td>\n        <td id=\"file-tests-py-LC98\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L99\" class=\"blob-num js-line-number\" data-line-number=\"99\"><\/td>\n        <td id=\"file-tests-py-LC99\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L100\" class=\"blob-num js-line-number\" data-line-number=\"100\"><\/td>\n        <td id=\"file-tests-py-LC100\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">test_dlagrangian<\/span>(<span class=\"pl-smi\">L<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L101\" class=\"blob-num js-line-number\" data-line-number=\"101\"><\/td>\n        <td id=\"file-tests-py-LC101\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.magenta <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>Finite-difference Lagrangian:<span class=\"pl-pds\">&#39;<\/span><\/span>,<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L102\" class=\"blob-num js-line-number\" data-line-number=\"102\"><\/td>\n        <td id=\"file-tests-py-LC102\" class=\"blob-code blob-code-inner js-file-line\">    x <span class=\"pl-k\">=<\/span> np.random.randn(L.d)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L103\" class=\"blob-num js-line-number\" data-line-number=\"103\"><\/td>\n        <td id=\"file-tests-py-LC103\" class=\"blob-code blob-code-inner js-file-line\">    z <span class=\"pl-k\">=<\/span> np.random.uniform(<span class=\"pl-k\">-<\/span><span class=\"pl-c1\">1<\/span>,<span class=\"pl-c1\">1<\/span>,<span class=\"pl-v\">size<\/span><span class=\"pl-k\">=<\/span>L.n)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L104\" class=\"blob-num js-line-number\" data-line-number=\"104\"><\/td>\n        <td id=\"file-tests-py-LC104\" class=\"blob-code blob-code-inner js-file-line\">    l <span class=\"pl-k\">=<\/span> np.random.uniform(<span class=\"pl-k\">-<\/span><span class=\"pl-c1\">1<\/span>,<span class=\"pl-c1\">1<\/span>,<span class=\"pl-v\">size<\/span><span class=\"pl-k\">=<\/span>L.n)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L105\" class=\"blob-num js-line-number\" data-line-number=\"105\"><\/td>\n        <td id=\"file-tests-py-LC105\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L106\" class=\"blob-num js-line-number\" data-line-number=\"106\"><\/td>\n        <td id=\"file-tests-py-LC106\" class=\"blob-code blob-code-inner js-file-line\">    dx, dz, dl <span class=\"pl-k\">=<\/span> L.dlagrangian(x, z, l)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L107\" class=\"blob-num js-line-number\" data-line-number=\"107\"><\/td>\n        <td id=\"file-tests-py-LC107\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> fdcheck(<span class=\"pl-k\">lambda<\/span>: L.lagrangian(x, z, l), z, dz, <span class=\"pl-v\">quiet<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-c1\">1<\/span>).mean_relative_error <span class=\"pl-k\">&lt;<\/span> <span class=\"pl-c1\">0.01<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L108\" class=\"blob-num js-line-number\" data-line-number=\"108\"><\/td>\n        <td id=\"file-tests-py-LC108\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> fdcheck(<span class=\"pl-k\">lambda<\/span>: L.lagrangian(x, z, l), x, dx, <span class=\"pl-v\">quiet<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-c1\">1<\/span>).mean_relative_error <span class=\"pl-k\">&lt;<\/span> <span class=\"pl-c1\">0.01<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L109\" class=\"blob-num js-line-number\" data-line-number=\"109\"><\/td>\n        <td id=\"file-tests-py-LC109\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> fdcheck(<span class=\"pl-k\">lambda<\/span>: L.lagrangian(x, z, l), l, dl, <span class=\"pl-v\">quiet<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-c1\">1<\/span>).mean_relative_error <span class=\"pl-k\">&lt;<\/span> <span class=\"pl-c1\">0.01<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L110\" class=\"blob-num js-line-number\" data-line-number=\"110\"><\/td>\n        <td id=\"file-tests-py-LC110\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.green <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>ok<span class=\"pl-pds\">&#39;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L111\" class=\"blob-num js-line-number\" data-line-number=\"111\"><\/td>\n        <td id=\"file-tests-py-LC111\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L112\" class=\"blob-num js-line-number\" data-line-number=\"112\"><\/td>\n        <td id=\"file-tests-py-LC112\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L113\" class=\"blob-num js-line-number\" data-line-number=\"113\"><\/td>\n        <td id=\"file-tests-py-LC113\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">test_reverse_mode<\/span>(<span class=\"pl-smi\">L<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L114\" class=\"blob-num js-line-number\" data-line-number=\"114\"><\/td>\n        <td id=\"file-tests-py-LC114\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.magenta <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>Reverse-mode:<span class=\"pl-pds\">&#39;<\/span><\/span>,<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L115\" class=\"blob-num js-line-number\" data-line-number=\"115\"><\/td>\n        <td id=\"file-tests-py-LC115\" class=\"blob-code blob-code-inner js-file-line\">    x <span class=\"pl-k\">=<\/span> np.random.randn(L.d)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L116\" class=\"blob-num js-line-number\" data-line-number=\"116\"><\/td>\n        <td id=\"file-tests-py-LC116\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L117\" class=\"blob-num js-line-number\" data-line-number=\"117\"><\/td>\n        <td id=\"file-tests-py-LC117\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Compare methods to finite-difference approximation to ∇f(x)<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L118\" class=\"blob-num js-line-number\" data-line-number=\"118\"><\/td>\n        <td id=\"file-tests-py-LC118\" class=\"blob-code blob-code-inner js-file-line\">    f_df_dx <span class=\"pl-k\">=<\/span> finite_difference(L.forward)(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L119\" class=\"blob-num js-line-number\" data-line-number=\"119\"><\/td>\n        <td id=\"file-tests-py-LC119\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L120\" class=\"blob-num js-line-number\" data-line-number=\"120\"><\/td>\n        <td id=\"file-tests-py-LC120\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> run forward to cache all the relavant stuff.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L121\" class=\"blob-num js-line-number\" data-line-number=\"121\"><\/td>\n        <td id=\"file-tests-py-LC121\" class=\"blob-code blob-code-inner js-file-line\">    z <span class=\"pl-k\">=<\/span> L.solve_constraints(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L122\" class=\"blob-num js-line-number\" data-line-number=\"122\"><\/td>\n        <td id=\"file-tests-py-LC122\" class=\"blob-code blob-code-inner js-file-line\">    l <span class=\"pl-k\">=<\/span> L.reverse_mode(L.dconstraints(z), L.df(z))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L123\" class=\"blob-num js-line-number\" data-line-number=\"123\"><\/td>\n        <td id=\"file-tests-py-LC123\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L124\" class=\"blob-num js-line-number\" data-line-number=\"124\"><\/td>\n        <td id=\"file-tests-py-LC124\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(f_df_dx, l[:L.d])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L125\" class=\"blob-num js-line-number\" data-line-number=\"125\"><\/td>\n        <td id=\"file-tests-py-LC125\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.green <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>ok<span class=\"pl-pds\">&#39;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L126\" class=\"blob-num js-line-number\" data-line-number=\"126\"><\/td>\n        <td id=\"file-tests-py-LC126\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L127\" class=\"blob-num js-line-number\" data-line-number=\"127\"><\/td>\n        <td id=\"file-tests-py-LC127\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L128\" class=\"blob-num js-line-number\" data-line-number=\"128\"><\/td>\n        <td id=\"file-tests-py-LC128\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">test_linear_system<\/span>(<span class=\"pl-smi\">L<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L129\" class=\"blob-num js-line-number\" data-line-number=\"129\"><\/td>\n        <td id=\"file-tests-py-LC129\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.magenta <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>Linear solve:<span class=\"pl-pds\">&#39;<\/span><\/span>,<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L130\" class=\"blob-num js-line-number\" data-line-number=\"130\"><\/td>\n        <td id=\"file-tests-py-LC130\" class=\"blob-code blob-code-inner js-file-line\">    x <span class=\"pl-k\">=<\/span> np.random.randn(L.d)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L131\" class=\"blob-num js-line-number\" data-line-number=\"131\"><\/td>\n        <td id=\"file-tests-py-LC131\" class=\"blob-code blob-code-inner js-file-line\">    f_df_dx <span class=\"pl-k\">=<\/span> finite_difference(L.forward)(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L132\" class=\"blob-num js-line-number\" data-line-number=\"132\"><\/td>\n        <td id=\"file-tests-py-LC132\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L133\" class=\"blob-num js-line-number\" data-line-number=\"133\"><\/td>\n        <td id=\"file-tests-py-LC133\" class=\"blob-code blob-code-inner js-file-line\">    z <span class=\"pl-k\">=<\/span> L.solve_constraints(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L134\" class=\"blob-num js-line-number\" data-line-number=\"134\"><\/td>\n        <td id=\"file-tests-py-LC134\" class=\"blob-code blob-code-inner js-file-line\">    D <span class=\"pl-k\">=<\/span> L.dconstraints(z)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L135\" class=\"blob-num js-line-number\" data-line-number=\"135\"><\/td>\n        <td id=\"file-tests-py-LC135\" class=\"blob-code blob-code-inner js-file-line\">    l <span class=\"pl-k\">=<\/span> L.reverse_mode(D, L.df(z))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L136\" class=\"blob-num js-line-number\" data-line-number=\"136\"><\/td>\n        <td id=\"file-tests-py-LC136\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L137\" class=\"blob-num js-line-number\" data-line-number=\"137\"><\/td>\n        <td id=\"file-tests-py-LC137\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> Run linear system solver -- Note that `linalg.solve` is generally worse at<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L138\" class=\"blob-num js-line-number\" data-line-number=\"138\"><\/td>\n        <td id=\"file-tests-py-LC138\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> solving the equations than `linalg.solve_triangular` (or equivalently<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L139\" class=\"blob-num js-line-number\" data-line-number=\"139\"><\/td>\n        <td id=\"file-tests-py-LC139\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> reverse mode). This is because the solver doesn&#39;t realize that the system<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L140\" class=\"blob-num js-line-number\" data-line-number=\"140\"><\/td>\n        <td id=\"file-tests-py-LC140\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> is upper triangular so it uses unstable operations like division and<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L141\" class=\"blob-num js-line-number\" data-line-number=\"141\"><\/td>\n        <td id=\"file-tests-py-LC141\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> subtraction.<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L142\" class=\"blob-num js-line-number\" data-line-number=\"142\"><\/td>\n        <td id=\"file-tests-py-LC142\" class=\"blob-code blob-code-inner js-file-line\">    sol <span class=\"pl-k\">=<\/span> scipy.linalg.solve(D, <span class=\"pl-k\">-<\/span>L.df(z))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L143\" class=\"blob-num js-line-number\" data-line-number=\"143\"><\/td>\n        <td id=\"file-tests-py-LC143\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(l, sol)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L144\" class=\"blob-num js-line-number\" data-line-number=\"144\"><\/td>\n        <td id=\"file-tests-py-LC144\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(f_df_dx, sol[:L.d])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L145\" class=\"blob-num js-line-number\" data-line-number=\"145\"><\/td>\n        <td id=\"file-tests-py-LC145\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L146\" class=\"blob-num js-line-number\" data-line-number=\"146\"><\/td>\n        <td id=\"file-tests-py-LC146\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> test aupper triangular solver<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L147\" class=\"blob-num js-line-number\" data-line-number=\"147\"><\/td>\n        <td id=\"file-tests-py-LC147\" class=\"blob-code blob-code-inner js-file-line\">    sol <span class=\"pl-k\">=<\/span> scipy.linalg.solve_triangular(D, <span class=\"pl-k\">-<\/span>L.df(z))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L148\" class=\"blob-num js-line-number\" data-line-number=\"148\"><\/td>\n        <td id=\"file-tests-py-LC148\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(f_df_dx, sol[:L.d])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L149\" class=\"blob-num js-line-number\" data-line-number=\"149\"><\/td>\n        <td id=\"file-tests-py-LC149\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(l, sol)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L150\" class=\"blob-num js-line-number\" data-line-number=\"150\"><\/td>\n        <td id=\"file-tests-py-LC150\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L151\" class=\"blob-num js-line-number\" data-line-number=\"151\"><\/td>\n        <td id=\"file-tests-py-LC151\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.green <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>ok<span class=\"pl-pds\">&#39;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L152\" class=\"blob-num js-line-number\" data-line-number=\"152\"><\/td>\n        <td id=\"file-tests-py-LC152\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L153\" class=\"blob-num js-line-number\" data-line-number=\"153\"><\/td>\n        <td id=\"file-tests-py-LC153\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L154\" class=\"blob-num js-line-number\" data-line-number=\"154\"><\/td>\n        <td id=\"file-tests-py-LC154\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">test_blockcoordinate<\/span>(<span class=\"pl-smi\">L<\/span>):<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L155\" class=\"blob-num js-line-number\" data-line-number=\"155\"><\/td>\n        <td id=\"file-tests-py-LC155\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.magenta <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>Block-coordinate updates for z and λ:<span class=\"pl-pds\">&#39;<\/span><\/span>,<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L156\" class=\"blob-num js-line-number\" data-line-number=\"156\"><\/td>\n        <td id=\"file-tests-py-LC156\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L157\" class=\"blob-num js-line-number\" data-line-number=\"157\"><\/td>\n        <td id=\"file-tests-py-LC157\" class=\"blob-code blob-code-inner js-file-line\">    x <span class=\"pl-k\">=<\/span> np.random.randn(L.d)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L158\" class=\"blob-num js-line-number\" data-line-number=\"158\"><\/td>\n        <td id=\"file-tests-py-LC158\" class=\"blob-code blob-code-inner js-file-line\">    z <span class=\"pl-k\">=<\/span> L.solve_constraints(x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L159\" class=\"blob-num js-line-number\" data-line-number=\"159\"><\/td>\n        <td id=\"file-tests-py-LC159\" class=\"blob-code blob-code-inner js-file-line\">    l <span class=\"pl-k\">=<\/span> L.reverse_mode(L.dconstraints(z), L.df(z))<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L160\" class=\"blob-num js-line-number\" data-line-number=\"160\"><\/td>\n        <td id=\"file-tests-py-LC160\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L161\" class=\"blob-num js-line-number\" data-line-number=\"161\"><\/td>\n        <td id=\"file-tests-py-LC161\" class=\"blob-code blob-code-inner js-file-line\">    dx, dz, dl <span class=\"pl-k\">=<\/span> L.dlagrangian(x, z, l)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L162\" class=\"blob-num js-line-number\" data-line-number=\"162\"><\/td>\n        <td id=\"file-tests-py-LC162\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(dx, l[:L.d])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L163\" class=\"blob-num js-line-number\" data-line-number=\"163\"><\/td>\n        <td id=\"file-tests-py-LC163\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.abs(dz).max() <span class=\"pl-k\">&lt;=<\/span> <span class=\"pl-c1\">1e-5<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L164\" class=\"blob-num js-line-number\" data-line-number=\"164\"><\/td>\n        <td id=\"file-tests-py-LC164\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">assert<\/span> np.allclose(dl, <span class=\"pl-c1\">0<\/span>)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L165\" class=\"blob-num js-line-number\" data-line-number=\"165\"><\/td>\n        <td id=\"file-tests-py-LC165\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L166\" class=\"blob-num js-line-number\" data-line-number=\"166\"><\/td>\n        <td id=\"file-tests-py-LC166\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print<\/span> colors.green <span class=\"pl-k\">%<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>ok<span class=\"pl-pds\">&#39;<\/span><\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L167\" class=\"blob-num js-line-number\" data-line-number=\"167\"><\/td>\n        <td id=\"file-tests-py-LC167\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L168\" class=\"blob-num js-line-number\" data-line-number=\"168\"><\/td>\n        <td id=\"file-tests-py-LC168\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L169\" class=\"blob-num js-line-number\" data-line-number=\"169\"><\/td>\n        <td id=\"file-tests-py-LC169\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def<\/span> <span class=\"pl-en\">main<\/span>():<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L170\" class=\"blob-num js-line-number\" data-line-number=\"170\"><\/td>\n        <td id=\"file-tests-py-LC170\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L171\" class=\"blob-num js-line-number\" data-line-number=\"171\"><\/td>\n        <td id=\"file-tests-py-LC171\" class=\"blob-code blob-code-inner js-file-line\">    C <span class=\"pl-k\">=<\/span> Constraints([<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>x<span class=\"pl-pds\">&#39;<\/span><\/span>,<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>y<span class=\"pl-pds\">&#39;<\/span><\/span>])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L172\" class=\"blob-num js-line-number\" data-line-number=\"172\"><\/td>\n        <td id=\"file-tests-py-LC172\" class=\"blob-code blob-code-inner js-file-line\">    C.add_constraint(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>a<span class=\"pl-pds\">&#39;<\/span><\/span>, np.exp,         [<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>x<span class=\"pl-pds\">&#39;<\/span><\/span>],         <span class=\"pl-v\">df<\/span><span class=\"pl-k\">=<\/span>np.exp)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L173\" class=\"blob-num js-line-number\" data-line-number=\"173\"><\/td>\n        <td id=\"file-tests-py-LC173\" class=\"blob-code blob-code-inner js-file-line\">    C.add_constraint(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>b<span class=\"pl-pds\">&#39;<\/span><\/span>, <span class=\"pl-k\">lambda<\/span> <span class=\"pl-smi\">x<\/span>: x<span class=\"pl-k\">**<\/span><span class=\"pl-c1\">2<\/span>, [<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>a<span class=\"pl-pds\">&#39;<\/span><\/span>],         <span class=\"pl-v\">df<\/span><span class=\"pl-k\">=<\/span><span class=\"pl-k\">lambda<\/span> <span class=\"pl-smi\">x<\/span>: <span class=\"pl-c1\">2<\/span><span class=\"pl-k\">*<\/span>x)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L174\" class=\"blob-num js-line-number\" data-line-number=\"174\"><\/td>\n        <td id=\"file-tests-py-LC174\" class=\"blob-code blob-code-inner js-file-line\">    C.add_constraint(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>c<span class=\"pl-pds\">&#39;<\/span><\/span>, np.sum,         [<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>a<span class=\"pl-pds\">&#39;<\/span><\/span>,<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>b<span class=\"pl-pds\">&#39;<\/span><\/span>,<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>y<span class=\"pl-pds\">&#39;<\/span><\/span>], <span class=\"pl-v\">df<\/span><span class=\"pl-k\">=<\/span>np.ones_like)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L175\" class=\"blob-num js-line-number\" data-line-number=\"175\"><\/td>\n        <td id=\"file-tests-py-LC175\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span>    C.add_constraint(&#39;c&#39;, np.product,     [&#39;a&#39;,&#39;b&#39;,&#39;y&#39;])<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L176\" class=\"blob-num js-line-number\" data-line-number=\"176\"><\/td>\n        <td id=\"file-tests-py-LC176\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#<\/span>    C.add_constraint(&#39;d&#39;, np.exp,         [&#39;c&#39;],         df=np.exp)<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L177\" class=\"blob-num js-line-number\" data-line-number=\"177\"><\/td>\n        <td id=\"file-tests-py-LC177\" class=\"blob-code blob-code-inner js-file-line\">    C.add_constraint(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>d<span class=\"pl-pds\">&#39;<\/span><\/span>, np.tanh,        [<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>c<span class=\"pl-pds\">&#39;<\/span><\/span>])<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L178\" class=\"blob-num js-line-number\" data-line-number=\"178\"><\/td>\n        <td id=\"file-tests-py-LC178\" class=\"blob-code blob-code-inner js-file-line\">    C.add_constraint(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>e<span class=\"pl-pds\">&#39;<\/span><\/span>, np.sin,         [<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>c<span class=\"pl-pds\">&#39;<\/span><\/span>],         <span class=\"pl-v\">df<\/span><span class=\"pl-k\">=<\/span>np.cos)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L179\" class=\"blob-num js-line-number\" data-line-number=\"179\"><\/td>\n        <td id=\"file-tests-py-LC179\" class=\"blob-code blob-code-inner js-file-line\">    C.add_constraint(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>f<span class=\"pl-pds\">&#39;<\/span><\/span>, np.sum,         [<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>d<span class=\"pl-pds\">&#39;<\/span><\/span>,<span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>e<span class=\"pl-pds\">&#39;<\/span><\/span>],     <span class=\"pl-v\">df<\/span><span class=\"pl-k\">=<\/span>np.ones_like)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L180\" class=\"blob-num js-line-number\" data-line-number=\"180\"><\/td>\n        <td id=\"file-tests-py-LC180\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L181\" class=\"blob-num js-line-number\" data-line-number=\"181\"><\/td>\n        <td id=\"file-tests-py-LC181\" class=\"blob-code blob-code-inner js-file-line\">    n <span class=\"pl-k\">=<\/span> <span class=\"pl-c1\">len<\/span>(C.inputs) <span class=\"pl-k\">+<\/span> <span class=\"pl-c1\">len<\/span>(C)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L182\" class=\"blob-num js-line-number\" data-line-number=\"182\"><\/td>\n        <td id=\"file-tests-py-LC182\" class=\"blob-code blob-code-inner js-file-line\">    _r <span class=\"pl-k\">=<\/span> np.random.randn(n)    <span class=\"pl-c\"><span class=\"pl-c\">#<\/span> random linear function of intermediate nodes<\/span><\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L183\" class=\"blob-num js-line-number\" data-line-number=\"183\"><\/td>\n        <td id=\"file-tests-py-LC183\" class=\"blob-code blob-code-inner js-file-line\">    f <span class=\"pl-k\">=<\/span> _r.dot<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L184\" class=\"blob-num js-line-number\" data-line-number=\"184\"><\/td>\n        <td id=\"file-tests-py-LC184\" class=\"blob-code blob-code-inner js-file-line\">    df <span class=\"pl-k\">=<\/span> <span class=\"pl-k\">lambda<\/span> <span class=\"pl-smi\">z<\/span>: _r.copy()<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L185\" class=\"blob-num js-line-number\" data-line-number=\"185\"><\/td>\n        <td id=\"file-tests-py-LC185\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L186\" class=\"blob-num js-line-number\" data-line-number=\"186\"><\/td>\n        <td id=\"file-tests-py-LC186\" class=\"blob-code blob-code-inner js-file-line\">    L <span class=\"pl-k\">=<\/span> Computation(f, C.inputs, C, <span class=\"pl-v\">df<\/span> <span class=\"pl-k\">=<\/span> df)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L187\" class=\"blob-num js-line-number\" data-line-number=\"187\"><\/td>\n        <td id=\"file-tests-py-LC187\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L188\" class=\"blob-num js-line-number\" data-line-number=\"188\"><\/td>\n        <td id=\"file-tests-py-LC188\" class=\"blob-code blob-code-inner js-file-line\">    test_dlagrangian(L)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L189\" class=\"blob-num js-line-number\" data-line-number=\"189\"><\/td>\n        <td id=\"file-tests-py-LC189\" class=\"blob-code blob-code-inner js-file-line\">    test_reverse_mode(L)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L190\" class=\"blob-num js-line-number\" data-line-number=\"190\"><\/td>\n        <td id=\"file-tests-py-LC190\" class=\"blob-code blob-code-inner js-file-line\">    test_forward_mode(L)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L191\" class=\"blob-num js-line-number\" data-line-number=\"191\"><\/td>\n        <td id=\"file-tests-py-LC191\" class=\"blob-code blob-code-inner js-file-line\">    test_linear_system(L)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L192\" class=\"blob-num js-line-number\" data-line-number=\"192\"><\/td>\n        <td id=\"file-tests-py-LC192\" class=\"blob-code blob-code-inner js-file-line\">    test_blockcoordinate(L)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L193\" class=\"blob-num js-line-number\" data-line-number=\"193\"><\/td>\n        <td id=\"file-tests-py-LC193\" class=\"blob-code blob-code-inner js-file-line\">    test_implicit_diff_view(L)<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L194\" class=\"blob-num js-line-number\" data-line-number=\"194\"><\/td>\n        <td id=\"file-tests-py-LC194\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L195\" class=\"blob-num js-line-number\" data-line-number=\"195\"><\/td>\n        <td id=\"file-tests-py-LC195\" class=\"blob-code blob-code-inner js-file-line\">\n<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L196\" class=\"blob-num js-line-number\" data-line-number=\"196\"><\/td>\n        <td id=\"file-tests-py-LC196\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">if<\/span> <span class=\"pl-c1\">__name__<\/span> <span class=\"pl-k\">==<\/span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;<\/span>__main__<span class=\"pl-pds\">&#39;<\/span><\/span>:<\/td>\n      <\/tr>\n      <tr>\n        <td id=\"file-tests-py-L197\" class=\"blob-num js-line-number\" data-line-number=\"197\"><\/td>\n        <td id=\"file-tests-py-LC197\" class=\"blob-code blob-code-inner js-file-line\">    main()<\/td>\n      <\/tr>\n<\/table>\n\n\n  <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/timvieira/8addcb81dd622b0108e0e7e06af74185/raw/719622c71d2a7cd539fafd41f29de5ecb76d391e/tests.py\" style=\"float:right\">view raw<\/a>\n        <a href=\"https://gist.github.com/timvieira/8addcb81dd622b0108e0e7e06af74185#file-tests-py\">tests.py<\/a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n<\/div>\n')
